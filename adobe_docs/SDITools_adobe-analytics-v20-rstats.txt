Source URL: https://github.com/SDITools/adobe-analytics-v20-rstats
================================================================================

SDITools
/
adobe-analytics-v20-rstats
Public
Notifications
You must be signed in to change notification settings
Fork
0
Star
2
A simple example of pulling data using the Adobe Analytics Reporting API v2.0. This example does not include OAuth but, rather, relies on grabbing a (temporary) bearer token from Analysis Workspace.
License
MIT license
2
stars
0
forks
Branches
Tags
Activity
Star
Notifications
You must be signed in to change notification settings
Code
Issues
0
Pull requests
0
Actions
Projects
0
Security
Uh oh!
There was an error while loading.
Please reload this page
.
Insights
Additional navigation options
Code
Issues
Pull requests
Actions
Projects
Security
Insights
SDITools/adobe-analytics-v20-rstats
master
Branches
Tags
Go to file
Code
Open more actions menu
Folders and files
Name
Name
Last commit message
Last commit date
Latest commit
History
4 Commits
.gitignore
.gitignore
LICENSE
LICENSE
README.md
README.md
aa-simple-ranked.Rmd
aa-simple-ranked.Rmd
adobe-analytics-v20-rstats.Rproj
adobe-analytics-v20-rstats.Rproj
View all files
Repository files navigation
README
MIT license
Basic Example: Adobe Analytics v2.0 API
The goal of this example is to simply "pull a simple table of data." Because of the way the v2.0 API works, to keep it
simple
, this code is limited to a single dimension and a single metric.
This requires a different kind of API access than was required for the v1.4 API (which simply required the user to have Web services access, and then just used the client ID and secret from that). So, you will need to have -- or have the assistance of someone who has -- Adobe I/O Console admin access.
What's needed (each of these values are required for the code to run):
api_key
-- this is a key that is available once you create an Adobe I/O OAuth client in the Adobe I/O console. For details, see
Adobe's documentation
and/or
this video by Jen Lasser
.
company_id
-- you can get this from the
Swagger interface
for the Adobe Analytics API. Jen explains how to do that starting at the 1:37 mark in
the same video referenced above
.
aa_rsid
-- this is just the report suite ID. You can grab this from your website or the plain ol' Adobe Analytics Admin Console (no fancy Adobe I/O stuff needed for this).
aa_token
-- this comes from the Analysis Workspace debugger tool. Details on how to enable that are available in
Adobe's documentation
. Follow steps 1 through 6 and then grab the
Authorization:
value from the
CURL REQUEST
section of any request you inspect with the little bug icon. This token will expire periodically and will have to be updated in the code. OR, if you've got the coding chops, you can
see Adobe's OAuth documentation
and code a more robust solution.
Once you've got those values, just plug them into the first code snippet in
aa-simple-ranked.Rmd
and you should be off to the races.
About
A simple example of pulling data using the Adobe Analytics Reporting API v2.0. This example does not include OAuth but, rather, relies on grabbing a (temporary) bearer token from Analysis Workspace.
Resources
Readme
License
MIT license
Uh oh!
There was an error while loading.
Please reload this page
.
Activity
Custom properties
Stars
2
stars
Watchers
1
watching
Forks
0
forks
Report repository
Releases
No releases published
Packages
0
No packages published